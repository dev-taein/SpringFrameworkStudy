<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<beans:bean name="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
		<beans:property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"/>
		<beans:property name="username" value="sys as sysdba" />
		<beans:property name="password" value="admin1125" />
	</beans:bean>
	
	<beans:bean name="template" class="org.springframework.jdbc.core.JdbcTemplate">
		<beans:property name="dataSource" ref="dataSource" />
	</beans:bean>
	
	<!-- 트랜잭션 매니저 설정 -->
	<beans:bean name="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<beans:property name="dataSource" ref="dataSource" />
	</beans:bean>
	
	<!-- 트랜잭션 템플릿 설정 -->
	<beans:bean name="transactionTemplate1" class="org.springframework.transaction.support.TransactionTemplate">
		<beans:property name="transactionManager" ref="transactionManager" />
		<beans:property name="propagationBehavior" value="0" /> <!-- 0은 전파속성(require)기본값 -->
	</beans:bean>
	
	<!-- 트랜잭션 템플릿 설정 (DAO에 적용) -->
	<beans:bean name="transactionTemplate2" class="org.springframework.transaction.support.TransactionTemplate">
		<beans:property name="transactionManager" ref="transactionManager" />
		<beans:property name="propagationBehavior" value="5" />
	</beans:bean>
	
	<!-- BuyDAO 등록 -->
	<beans:bean name="dao" class="com.spring.transactionEx.BuyDAO">
		<beans:property name="template" ref="template" />
		<beans:property name="transactionTemplate2" ref="transactionTemplate2"></beans:property>
	</beans:bean>
	
	<!-- BuyCmdImpl 등록 -->
	<beans:bean name="buyCmd" class="com.spring.cmd.BuyCmdImpl">
		<beans:property name="buyDAO" ref="dao" />
		<beans:property name="transactionTemplate1" ref="transactionTemplate1"></beans:property>
	</beans:bean>



	<!-- transactionManager AutoWired 어노테이션 없이 사용 BuyDAO는 @Service 어노테이션 사용불가
	<beans:bean name="buydao" class="com.spring.transactionEx.BuyDAO">
		<beans:property name="transactionManager" ref="transactionManager" />
	</beans:bean>
	
	template AutoWired 어노테이션 없이 사용 BuyDAO는 @Service 어노테이션 사용불가
	<beans:bean name="buydao1" class="com.spring.transactionEx.BuyDAO">
		<beans:property name="template" ref="template" />
	</beans:bean>
	 -->
	<context:component-scan base-package="com.spring" />
	
	
	
</beans:beans>
