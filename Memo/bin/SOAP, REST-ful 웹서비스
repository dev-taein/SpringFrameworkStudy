[SOAP 기반 웹서비스] 

- SOA : 해당 서비스를 서로 조합해서 업무 기능을 구현한 어플리케이션을 만들어내는 소프트웨어 아키텍처
		기업에서 어떠한 플랫폼에서든(ios,android 등) 똑같은 서비스를 구현하는 것.
		 WSDL을 이용해서 UDDI저장소에 DATA -> XML 변경하여 저장한다.

- DATA ------> XML로 표현된다
- UDDI : Universal Description Discovery and Integration
		.웹 서비스를 등록하고 검색하기 위한 저장소로 웹서비스를 공개적으로 접근, 검색이 가능하도록 한 공개된 레지스트리
		
- WSDL(Web Service Description Language) : 웹 서비스 기술 언어 XML로 기술된다.
	<definitions>
		<types>
			데이터타입 선언
		</types>
		<message>
			메서드의 인자와 리턴 값 선언
		</message>
		<portType>
			인터페이스 정의
			<operation>메서드 선언</operation>
		</portType>
		
		<binding>
			실제 네트워크 프로토콜과 portType 매핑
		</binding>
		<service>
			서비스정의(Endpoint)
			<port>웹서비스URL</port>
		</service>
	</definitions>


	#SOAP 기반의 웹서비스
		-HTTP, HTTPS, SMTP등을 통해서 XML기반의 메시지를 컴퓨터 네트워크 상에서 교환하는 프로토콜
		장점 : 동적 바인딩 가능, 독립된 모듈, 서비스 연결이 느슨하게 연결(종속되지않게), 서비스 조립이 가능, 플랫폼 무관
		단점 : HTTP상에서 전송하기에 무겁다, 개발 난이도가 높다.
		
		
[RESTful 기반 웹서비스] 스프링 4.0부터 지원함.
	-Roy Fielding이 박사학위 논문에서 웹 아키텍처가 웹의 본래 설계의 우수성을 활용하지 못하므로
	 웹의 장점을 최대한 활용할 수 있는 네트워크 기반의 아키텍처를 제안
	 
	 
	#RESTful(REpresentational State Transfer, 2000년)
		.HTTP 프로토콜로 데이터를 전달하는 프레임워크
		.클라이언트와 서버 간의 구성요소를 엄격 하게 분리하여 구현을 단순화 함
		.서버와 클라이언트를 독립적으로 구현함으로, 확장성을 향상
		.핵심은 Web의 개방된 Resource를 활용한다.
		(SOAP 액션과 프로세싱을 사용하기 때문에 규격화하기 힘들다. 그래서 WSDL UDDI등을 이용함)
		.REST는 웹에 개방된 리소스를 원격에서 또는 로컬에서 쉽게 이용할 수 있는 웹응용을 정착
		.REST 아키텍처 스타일에 따라서 정의되고 이용되는 서비스나 응용프로그램을 RESTful 웹 서비스라고 부른다.
			
	**SOA(Service Oriented Architecture), ROA(Resource Oriented Architecture)
		서비스 지향 아키텍처						자원 지향 아키텍처
		
	*SOAP 기반의 웹서비스는 SOA 구조에 따라서 UDDI 레지스트리를 통해서 웹서비스를 등록하고, 탐색하고, 바인딩해서 이용한다.
		-상호 통신 간 프로그램들이 잘 이해할 수 있는 문법에 따라 개발 되었고, 그에 따라서 개발자들은 웹 서비스의 기본 스펙을 알아야 하는 고난이도 프로그래밍 능력이 요구됨
		-사람 보다 기계의 우선적으로 이해하기 쉬운 구조이므로 환경설정 및 개발환경이 준비(동작과 프로세스 중심)
		
	*RESTful 기반의 웹서비스는 리소스를 등록하고 저장하는 중간 매개체가 없어 리소스를 제공자가 직접 요청자에게 제공한다.
		-인터넷 서비스 업체들이 응용 개발자들에 손쉬운 데이터 제공을 목적으로 출발함.
		-기계보다는 사람이 이해하기 쉽도록 인터넷 기본(HTTP/XML)이외에 별도의 개발/실행 환경이 필요 없음.
		