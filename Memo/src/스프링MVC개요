[스프링 MVC 흐름과 주요 구성 컴포넌트]
--내부과정--
 1) client -----> Dispatcher Servlet   //요청을 수신(FrontController 역할)
 
 2) Dispatcher Servlet ------> Handler Mapping //컨트롤러 문의 (어떤 컨트롤러를 사용할 것인지)
 
 3) Dispatcher Servlet ------> HandlerAdapter //HandlerAdapter를 이용해서 요청을 해당하는 Controller의 메소드에 전송 
 	해당 컨트롤러는 요청을 다 수행하고 나서 결과와 view에 대한 정보를 HandlerAdapter에게 전달하고 HandlerAdapter는 ModelAndView에 정보를 전송한다
 	ModelAndView는 다시 Dispatcher Servlet에 정보를 전달합니다. Dispatcher Servlet는 다시 ViewResolver에게 응답할 view를 요청한다.
 	Dispatcher Servlet는 요청 받은 view를 이용해서 응답한다.
  [Controller=Handler]
 
 4) Controller ------> HandlerAdapter // 요청 결과와 View에 대한 정보를 리턴한다.
 
 5) HandlerAdapter -----> Dispatcher Servlet // Model And View 객체를 만들어서 전달
 
 6) Dispatcher Servlet --------> ViewResolver // 응답할 View를 요청
 
 7) Dispatcher Servlet --------> View // View를 이용해서 응답한다.
 
  핸들러 == 컨트롤러
  핸들러 매핑은 ----> 핸들러 어댑터(일대일 매핑)를 찾아서 컨트롤러를 부른다.
  
  [컨트롤러 제작 순서]
  최초의 클라이언트 요청이 들어오면 컨트롤러로 진입을 한다.(Dispatcher에서 컨트롤러로 넘겨줌)
  컨트롤러는 요청에 대한 작업처리를 한 후 뷰에 데이터를 전달한다.
  
  1) @Controller를 이용한 클래스 생성
  2) @RequestMapping을 이용한 요청경로를 매핑한다.
  3) 요청 처리 메서드를 구현한다. (요청 처리 메서드 제작)
  4) 뷰 파일(jsp)의 이름을 리턴해준다.
  
  
  [ModelAndView 객체를 이용한 데이터 전달]
  해당 컨트롤러에 Model과 View를 한꺼번에 전달한다.
  1) ModelAndView 객체를 생성
  2) Model 객체에 데이터를 추가 시킨다.(addObject())
  3) 뷰이름을 설정한다 (setViewName()이용)
  
  
  